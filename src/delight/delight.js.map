{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/delight/context.ts","webpack:///./src/delight/delight.ts","webpack:///./src/delight/nodes/connection.ts","webpack:///./src/delight/nodes/node.ts","webpack:///./src/delight/nodes/socket.ts","webpack:///./src/delight/nodes/types/basic.ts"],"names":[],"mappings":"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","file":"delight.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/delight/delight.ts\");\n","import { DelightNode } from \"./nodes/node\";\r\nimport { NodeConnection } from \"./nodes/connection\";\r\nimport { Socket } from \"./nodes/socket\";\r\nimport { IDelightType } from \"./nodes/types/type\";\r\n\r\nexport class Context {\r\n    public nodes: DelightNode[] = []\r\n    public connections: NodeConnection[] = []\r\n\r\n    async getConnectionValue(\r\n        targetNode: DelightNode,\r\n        targetSocket: Socket<IDelightType>\r\n    ): Promise<IDelightType> {\r\n        const conn = this.connections.find(\r\n            c => c.outputNode === targetNode && c.outputSocket === targetSocket\r\n        )\r\n        if (conn) {\r\n            if (!conn.inputNode.isProcessed) {\r\n                await conn.inputNode.process(this)\r\n                conn.inputNode.isProcessed\r\n            }\r\n            \r\n            return conn.inputSocket.value\r\n        }\r\n\r\n        return null // Not connected to any output sockets\r\n    }\r\n\r\n    addNode(n: DelightNode) {\r\n        this.nodes.push(n)\r\n    }\r\n\r\n    connectNodes(\r\n        inputNode: DelightNode,\r\n        inputSocket: Socket<IDelightType>,\r\n        outputNode: DelightNode,\r\n        outputSocket: Socket<IDelightType>\r\n    ) {\r\n        this.connections.push(\r\n            new NodeConnection(\r\n                inputNode, inputSocket,\r\n                outputNode, outputSocket\r\n            )\r\n        )\r\n    }\r\n}","// Basic bitch testing for now\r\n\r\nimport { Context } from \"./context\";\r\nimport { DelightNode, NodeCategory } from \"./nodes/node\";\r\nimport { Socket } from \"./nodes/socket\";\r\nimport { NumberType } from \"./nodes/types/basic\";\r\nimport { IDelightType } from \"./nodes/types/type\";\r\n\r\n// A node that adds 1 to the input\r\nclass TestNode extends DelightNode {\r\n    public id = \"gen.testNode\"\r\n\r\n    public name = \"Add 1, lol\"\r\n    public category: NodeCategory = NodeCategory.general\r\n    \r\n    public inputs: Socket<IDelightType>[] = [\r\n        new Socket(\r\n            \"num\", \"Number\", new NumberType(0)\r\n        )\r\n    ]\r\n    public outputs: Socket<IDelightType>[] = [\r\n        new Socket(\r\n            \"newNum\",\r\n            \"Number + 1\",\r\n            new NumberType(1),\r\n            false // Not adjustable by the user\r\n        )\r\n    ]\r\n    \r\n    async process(context: Context): Promise<void> {\r\n        const num = await this.getInput(\"num\", context) as NumberType\r\n        const outSocket = this.getOutputSocket(\"newNum\") as Socket<NumberType>\r\n\r\n        outSocket.value.value = num.value + 1\r\n    }\r\n}\r\n\r\nconst ctx = new Context()\r\n\r\nconst n1 = new TestNode()\r\nconst numInput = n1.getInputSocket(\"num\") as Socket<NumberType>\r\nnumInput.value.value = 4\r\nctx.addNode(n1)\r\n\r\nconst n2 = new TestNode()\r\nctx.addNode(n2)\r\n\r\nctx.connectNodes(\r\n    n1, n1.getOutputSocket(\"newNum\"),\r\n    n2, n2.getInputSocket(\"num\")\r\n)\r\n\r\nn2.process(ctx).then(() => {\r\n    const outSocket = n2.getOutputSocket(\"newNum\") as Socket<NumberType>\r\n    console.log(outSocket.value.value)\r\n})","import { DelightNode } from \"./node\";\r\nimport { Socket } from \"./socket\";\r\nimport { IDelightType } from \"./types/type\";\r\n\r\nexport class NodeConnection {\r\n    constructor(\r\n        public inputNode: DelightNode,\r\n        public inputSocket: Socket<IDelightType>,\r\n        public outputNode: DelightNode,\r\n        public outputSocket: Socket<IDelightType>\r\n    ) {}\r\n}","import { Socket } from \"./socket\"\r\nimport { Context } from \"../context\"\r\nimport { IDelightType } from \"./types/type\"\r\n\r\nexport enum NodeCategory {\r\n    general\r\n}\r\n\r\nexport class DelightNode {\r\n    public id = \"gen.blankNode\"\r\n\r\n    public name = \"Node\"\r\n    public category: NodeCategory = NodeCategory.general\r\n\r\n    // Do not touch this! This will be handled by the Context\r\n    public isProcessed = false\r\n    \r\n    public inputs: Socket<IDelightType>[] = []\r\n    public outputs: Socket<IDelightType>[] = []\r\n    public options: Socket<IDelightType>[] = []\r\n\r\n    getInputSocket(id: string): Socket<IDelightType> {\r\n        return this.inputs.find(s => s.id === id)\r\n    }\r\n\r\n    getOutputSocket(id: string): Socket<IDelightType> {\r\n        return this.outputs.find(s => s.id === id)\r\n    }\r\n    \r\n    async getInput(id: string, ctx: Context): Promise<IDelightType> {\r\n        const socket = this.getInputSocket(id)\r\n        if (!socket) throw \"what the fuck\"\r\n\r\n        const connValue = await ctx.getConnectionValue(this, socket)\r\n        if (connValue !== null) return connValue\r\n        \r\n        return socket.value\r\n    }\r\n\r\n    async process(context: Context): Promise<void> {}\r\n}","import { IDelightType } from \"./types/type\";\r\n\r\nexport class Socket<T> {\r\n    constructor(\r\n        public id: string,\r\n        public name: string,\r\n        public value: T,\r\n        public adjustable = true\r\n    ) {}\r\n}","import { IDelightType } from \"./type\";\r\n\r\nexport class NumberType implements IDelightType {\r\n    constructor(\r\n        public value = 0,\r\n        public min = 0,\r\n        public max = 1,\r\n        public step = 0.01\r\n    ) {}\r\n\r\n    deserialize(data: any) {\r\n        this.value = +data\r\n    }\r\n\r\n    serialize(): any {\r\n        return this.value\r\n    }\r\n}\r\n"],"sourceRoot":""}